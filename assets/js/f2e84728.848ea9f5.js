"use strict";(self.webpackChunk_0_x_mrtt_github_io=self.webpackChunk_0_x_mrtt_github_io||[]).push([[483],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},l=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,c=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),p=u(n),m=i,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,a(a({ref:e},l),{},{components:n})):r.createElement(f,a({ref:e},l))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,a=new Array(o);a[0]=p;var s={};for(var c in e)hasOwnProperty.call(e,c)&&(s[c]=e[c]);s.originalType=t,s.mdxType="string"==typeof t?t:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6499:function(t,e,n){n.r(e),n.d(e,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var r=n(7462),i=n(3366),o=(n(7294),n(3905)),a=["components"],s={sidebar_position:1},c="MQTT2DB",u={unversionedId:"mqtt2db/getting-started/mqtt2db",id:"mqtt2db/getting-started/mqtt2db",title:"MQTT2DB",description:"What is it ?",source:"@site/docs/mqtt2db/getting-started/mqtt2db.md",sourceDirName:"mqtt2db/getting-started",slug:"/mqtt2db/getting-started/mqtt2db",permalink:"/docs/mqtt2db/getting-started/mqtt2db",draft:!1,editUrl:"https://github.com/0xMRTT/0xMRTT.github.io/edit/main/docs/mqtt2db/getting-started/mqtt2db.md",tags:[],version:"current",lastUpdatedBy:"0xMRTT",lastUpdatedAt:1654970069,formattedLastUpdatedAt:"6/11/2022",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Getting started",permalink:"/docs/category/getting-started-1"},next:{title:"Install",permalink:"/docs/mqtt2db/getting-started/install"}},l={},d=[{value:"What is it ?",id:"what-is-it-",level:2}],p={toc:d};function m(t){var e=t.components,n=(0,i.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mqtt2db"},"MQTT2DB"),(0,o.kt)("h2",{id:"what-is-it-"},"What is it ?"),(0,o.kt)("p",null,"It's save mqtt payloads to a database with timestamp."),(0,o.kt)("h1",{id:"how-it-works"},"How it works?"),(0,o.kt)("p",null,"MQTT2DB suscribe to all topics by default (you can configure it for only suscribing to a listof topics). When it receives a message, MQTT2DB store the message in a database. You can easily access to the payload by executing ",(0,o.kt)("inlineCode",{parentName:"p"},"SELECT")," on the database."),(0,o.kt)("h1",{id:"what-i-need-"},"What I need ?"),(0,o.kt)("p",null,"Currently, Linux is only officialy supported. You need to have the latest version of python (currently 3.10) and you also need to install dependencies (with ",(0,o.kt)("inlineCode",{parentName:"p"},"poetry install")," or with ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install -r requirements.txt"),"). MQTT2DB works better with systemd because you can just enabld the unit."))}m.isMDXComponent=!0}}]);